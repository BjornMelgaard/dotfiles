#!/usr/bin/env ruby
# Author - Sergey Homa <melgaardbjorn@gmail.com>
# License - none

# lint commit message using commitlint,
# commit if message is valid,
#
# note:
#   - commitlint searches config file (.commitlintrc.yml)
#     upwards of directory tree, so you can store config
#     file in your $HOME
# usage:
# - in bash
#   alias lc="linted-git-commit"
#   alias lc!="linted-git-commit --amend"
# - in console
#   gaa && lc -m "feat: added linted-git-commit"

# run
options = ARGV
message_pointer_index = options.index('-m')

unless message_pointer_index
  puts 'Message is required'
  exit false
end

message = options.delete_at(message_pointer_index + 1)
options.delete_at(message_pointer_index)

lint = 'commitlint'
cmd = "echo \"#{message}\" | #{lint}"

return unless system(cmd)

`git commit #{options.join(' ')} -m \"#{message}\"`
