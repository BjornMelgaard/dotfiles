# Preamble |────────────────────────────────────────────────────────────────────
def ed %{ edit *debug* }

# Basic options ├───────────────────────────────────────────────────────────────
colorscheme dracula
set global makecmd 'make --jobs=8'
set global grepcmd 'ag --filename --column'
set global incsearch true
set global aligntab false
set global autoreload yes
set global tabstop     2
set global indentwidth 2

source 'kak/bindings.kak'
source 'kak/ui.kak'
source 'kak/clipboard.kak'
# source 'kak/filetypes.kak'

# Tools ├─────────────────────────────────────────────────────────
# import tools/fzf
# import tools/auto-pairs
# import tools/extend-line-x
# import tools/cleanup-on-save
# import tools/reload-kakrc
# import tools/selectsave
# hook global WinCreate .* %{ auto-pairs-enable }

# Plugins ├───────────────────────────────────────────────────────
#plug mawww/kak-ycmd
#import plugins/lenormf/kakoune-extra/comnotes
#import plugins/lenormf/kakoune-extra/syntastic

#syntastic-declare-filetype "ruby" \
#  'rubocop-wrapper.sh' \
#  'rubocop -a'

## Hooks ├───────────────────────────────────────────────────────────────────────

## insert spaces instead tabs
#hook -group TabExpander global InsertChar \t %{ exec -draft h@ }

## auto indent
#hook -group copyindent global InsertChar \n %{ exec -draft -itersel K<a-&> }

## auto wrap at 80 chars
##set global autowrap_column 80
##hook global WinCreate .* %{ autowrap-enable }

## auto-mkdir when saving buffer to file
#hook global BufWritePre .* %{ nop %sh{ dir=$(dirname $kak_buffile)
#  [ -d $dir ] || mkdir --parents $dir
#}}

#hook global BufCreate [*]grep[*] %{
#  map global normal - ':grep-prev<ret>'
#  map global normal + ':grep-next<ret>'
#}

#hook global BufCreate [*]make[*] %{
#  map global normal - ':make-prev<ret>'
#  map global normal + ':make-next<ret>'
#}

## Other ├──────────────────────────────────────────────────────────────────────

## map tmux split and window commands in vim style
#def -file-completion -params 1 tabe %{ tmux-new-window edit %arg{1} }
#def -file-completion -params 1 vsplit %{ tmux-new-vertical edit %arg{1} }
#def find -params 1 -shell-candidates %{ find . -type f } %{ edit %arg{1} }
