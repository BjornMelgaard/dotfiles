# Preamble |────────────────────────────────────────────────────────────────────
def ed %{ edit *debug* }
def import -params 1 %{ try %{ source %sh{echo ${XDG_CONFIG_HOME:-${HOME}/.config}/kak/$1.kak} } }
def plug -params 1 %{ %sh{
  localconf=${XDG_CONFIG_HOME:-${HOME}/.config}
  if [[ ! -d ${localconf}/build/$1 ]]; then
    (cd ${localconf}/build; git clone https://github.com/$1)
  fi
  for file in $(echo ${localconf}/build/$(basename $1)/*.kak); do
    echo source "$file"
  done
} }

# Basic options ├───────────────────────────────────────────────────────────────
colorscheme tomorrow-night
set global makecmd 'make --jobs=8'
set global grepcmd 'ag --filename --column'
set global incsearch true
set global aligntab false
set global ui_options ncurses_assistant=cat
set global autoreload yes
set global tabstop     2
set global indentwidth 2

import bindings
import ui

# Hooks ├───────────────────────────────────────────────────────────────────────

# insert spaces instead tabs
hook -group TabExpander global InsertChar \t %{ exec -draft h@ }

# auto wrap at 80 chars
#set global autowrap_column 80
#hook global WinCreate .* %{ autowrap-enable }

# auto-mkdir when saving buffer to file
hook global BufWritePre .* %{ nop %sh{ dir=$(dirname $kak_buffile)
  [ -d $dir ] || mkdir --parents $dir
}}

# on save
def cleanup %{
  clean_whitespaces
  echo cleaned!
}

def clean_whitespaces %{
  eval -draft -itersel %{
    try %{ exec -draft -itersel s <ret>d          } catch %{ echo '' }
    try %{ exec -draft -itersel s^\h+|\h+$<ret>d  } catch %{ echo '' }
    try %{ exec -draft -itersel s\h+<ret>c<space> } catch %{ echo '' }
  }
}

# Plugins ├─────────────────────────────────────────────────────────
import plugins/auto-pairs
import plugins/fzf
import plugins/surround
import plugins/extend-line-x
import plugins/camelcase

# enable plugins
hook global WinCreate .* %{
  auto-pairs-enable;
}

# map tmux split and window commands in vim style
def -file-completion -params 1 tabe %{ tmux-new-window edit %arg{1} }
def -file-completion -params 1 vsplit %{ tmux-new-vertical edit %arg{1} }
#map global insert ctrl-n '<esc>:new<ret>'
#map global normal ctrl-n ':new<ret>'

#def fedit -params 1 -shell-candidates %{ git ls-files } %{ edit %arg{1} }
#alias global fe fedit
